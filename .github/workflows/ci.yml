on:
  push:
    branches: [main]
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

name: Build

jobs:
  build:
    name: Build GTK Binaries
    runs-on: windows-latest
    timeout-minutes: 75
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        gtk-version: ["4"]
        arch: ["x64"]
        vstudio: ["17"]
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          egress-policy: audit

      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # v4.7.0
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - name: Use Python Dependency Cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install Poetry
        run: |
          python -m pip install --constraint=.github/constraints.txt poetry
          poetry config virtualenvs.in-project true
      - name: Install Python Dependencies
        run: poetry install
      # Temporarily move the preinstalled git, it causes errors related to cygwin.
      - name: Move git binary
        run: |
          Move-Item "C:\Program Files\Git\usr\bin" "C:\Program Files\Git\usr\notbin"
          Move-Item "C:\Program Files\Git\bin" "C:\Program Files\Git\notbin"
      - name: Build GTK4
        run: > # Use -j2 option to prevent out of memory errors with GitHub Action runners
          poetry run gvsbuild build
          --platform=${{ matrix.arch }}
          --vs-ver=${{ matrix.vstudio }}
          --ninja-opts -j2
          --enable-gi
          --py-wheel
          glib librsvg libpng gdk-pixbuf gtk4 pygobject libadwaita
      - name: Restore git binary
        run: |
          Move-Item "C:\Program Files\Git\usr\notbin" "C:\Program Files\Git\usr\bin"
          Move-Item "C:\Program Files\Git\notbin" "C:\Program Files\Git\bin"

      - name: Zip Bundle
        run: >
          7z a
          ${{ github.workspace }}/${{ env.release_name }}.zip
          "C:\gtk-build\gtk\x64\release"
        env:
          release_name: "gvsbuild-py${{ matrix.python-version }}-vs${{ matrix.vstudio }}-${{ matrix.arch }}"

      - name: Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
        with:
          name: latest
          tag_name: latest
          body: gvsbuild-release
          files: "*.zip"
